name: 🚀 Deploy
on:
  push:
    branches:
      - main
  release:
    types: [published]
  pull_request: {}

jobs:
  prepare:
    name: 🎫 Prepare
    runs-on: ubuntu-latest
    outputs:
      app: ${{ steps.filter.outputs.app }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 💾 Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key:
            node-modules-${{ hashFiles('package-lock.json',
            'prisma/schema.prisma') }}

      - name: 📥 Download deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: 🧭 Find Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
              - 'app/**'
              - 'package.json'
              - 'package-lock.json'
              - 'prisma/**'
              - 'public/**'
              - '.github/workflows/**'
              - 'worker/**'
            docs:
              - 'docs/**'
              - '.github/workflows/**'

  lint:
    name: ⬣ ESLint
    needs: prepare
    if:
      ${{ needs.prepare.outputs.app == 'true' || startsWith(github.ref,
      'refs/tags/v') }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-lint
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 💾 Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key:
            node-modules-${{ hashFiles('package-lock.json',
            'prisma/schema.prisma') }}

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    needs: prepare
    if:
      ${{ needs.prepare.outputs.app == 'true' || startsWith(github.ref,
      'refs/tags/v') }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-ts
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 💾 Cache Node Modules
        id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key:
            node-modules-${{ hashFiles('package-lock.json',
            'prisma/schema.prisma') }}

      - name: 🔎 Type check
        run: npm run typecheck

  build:
    name: 🐳 Build
    needs: [lint, typecheck]
    if:
      ${{ needs.prepare.outputs.app == 'true' || startsWith(github.ref,
      'refs/tags/v') }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-docker
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Setup cache
      - name: ⚡️ Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD}}

      - name: 🔎 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: longridgehighschool/start-screen
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
          flavor: |
            latest=auto

      - name: 🐳 Docker build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      # This ugly bit is necessary if you don't want your cache to grow forever
      # till it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docs:
    name: 📚 Docs
    needs: [prepare]
    if: ${{ needs.prepare.outputs.docs == 'true' }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-docs
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 💾 Cache Node Modules (Docs)
        id: node-cache-docs
        uses: actions/cache@v3
        with:
          path: docs/node_modules
          key: node-modules-docs-${{ hashFiles('docs/package-lock.json') }}

      - name: 📥 Download deps
        if: steps.node-cache-docs.outputs.cache-hit != 'true'
        run: cd docs && npm install

      - name: 🏗️ Build Docs
        run: cd docs && npm run build

      - name: 🚀 Deploy
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs/build
